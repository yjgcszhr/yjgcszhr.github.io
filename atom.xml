<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>hongruizhu</title>
  
  <subtitle>夏若浅沫的博客</subtitle>
  <link href="http://yjgcszhr.github.io/atom.xml" rel="self"/>
  
  <link href="http://yjgcszhr.github.io/"/>
  <updated>2021-04-05T09:26:07.165Z</updated>
  <id>http://yjgcszhr.github.io/</id>
  
  <author>
    <name>hongrui zhu</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>杂谈1</title>
    <link href="http://yjgcszhr.github.io/posts/e70.html"/>
    <id>http://yjgcszhr.github.io/posts/e70.html</id>
    <published>2021-04-05T09:07:27.000Z</published>
    <updated>2021-04-05T09:26:07.165Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>systemverilog学习日记（一）</title>
    <link href="http://yjgcszhr.github.io/posts/a99d.html"/>
    <id>http://yjgcszhr.github.io/posts/a99d.html</id>
    <published>2021-04-04T07:53:59.000Z</published>
    <updated>2021-04-06T05:39:40.897Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;IC前端设计需要设计人员编写testbench来进行对模块的初步前仿，一般是用verilog来写，但是verilog语言结构简单，编写一个稍微复杂的仿真环境很是费力，所以systemverilog便被开发设计出来。systemVerilog是一门高级语言，官方描述为：&lt;br</summary>
        
      
    
    
    
    <category term="编程语言" scheme="http://yjgcszhr.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
    <category term="sytemverilog" scheme="http://yjgcszhr.github.io/tags/sytemverilog/"/>
    
  </entry>
  
  <entry>
    <title>AMBA总线（2）——axi4_stream总线</title>
    <link href="http://yjgcszhr.github.io/posts/4372.html"/>
    <id>http://yjgcszhr.github.io/posts/4372.html</id>
    <published>2021-04-03T06:33:33.000Z</published>
    <updated>2021-04-03T08:07:17.228Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;AXI4-stream接口连接产生数据的一个主设备和接收数据的一个从设备，用来传播数据流，和其他AXI协议不同的是，AXI4-stream不需要主机提供地址，使用相对方便，当传输单数据时其数据传输时序与第一讲的APB总线就少了个地址信息的，其他大致相同。&lt;/p&gt;
&lt;h2</summary>
        
      
    
    
    
    <category term="理论知识" scheme="http://yjgcszhr.github.io/categories/%E7%90%86%E8%AE%BA%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="AXI4-stream" scheme="http://yjgcszhr.github.io/tags/AXI4-stream/"/>
    
    <category term="AMBA总线" scheme="http://yjgcszhr.github.io/tags/AMBA%E6%80%BB%E7%BA%BF/"/>
    
  </entry>
  
  <entry>
    <title>AMBA总线（1）——APB总线</title>
    <link href="http://yjgcszhr.github.io/posts/982f.html"/>
    <id>http://yjgcszhr.github.io/posts/982f.html</id>
    <published>2021-04-01T10:29:56.000Z</published>
    <updated>2021-04-04T05:26:27.149Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;AMBA协议是一个开放标准的片上互联规范，用于SOC功能模块的连接和管理。目前，已经推出来四代版本的AMBA规范。版本2的AMBA规范定义了3个总线接口：&lt;br&gt;AHB（advanced high-performance</summary>
        
      
    
    
    
    <category term="理论知识" scheme="http://yjgcszhr.github.io/categories/%E7%90%86%E8%AE%BA%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="APB总线" scheme="http://yjgcszhr.github.io/tags/APB%E6%80%BB%E7%BA%BF/"/>
    
    <category term="AMBA总线&#39;" scheme="http://yjgcszhr.github.io/tags/AMBA%E6%80%BB%E7%BA%BF/"/>
    
  </entry>
  
  <entry>
    <title>时序约束入门</title>
    <link href="http://yjgcszhr.github.io/posts/fd6e.html"/>
    <id>http://yjgcszhr.github.io/posts/fd6e.html</id>
    <published>2021-03-17T13:50:37.000Z</published>
    <updated>2021-03-24T03:25:53.940Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;基本概念&quot;&gt;&lt;a href=&quot;#基本概念&quot; class=&quot;headerlink&quot; title=&quot;基本概念&quot;&gt;&lt;/a&gt;基本概念&lt;/h2&gt;&lt;h3 id=&quot;1-建立时间&quot;&gt;&lt;a href=&quot;#1-建立时间&quot; class=&quot;headerlink&quot; title=&quot;1.</summary>
        
      
    
    
    
    <category term="实用技巧" scheme="http://yjgcszhr.github.io/categories/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    
    
    <category term="IC设计" scheme="http://yjgcszhr.github.io/tags/IC%E8%AE%BE%E8%AE%A1/"/>
    
    <category term="STA" scheme="http://yjgcszhr.github.io/tags/STA/"/>
    
  </entry>
  
  <entry>
    <title>vcs+verdi安装经历</title>
    <link href="http://yjgcszhr.github.io/posts/d3e2.html"/>
    <id>http://yjgcszhr.github.io/posts/d3e2.html</id>
    <published>2021-03-15T07:50:28.000Z</published>
    <updated>2021-03-15T09:12:10.904Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;一直以来我都使用modelsim来进行仿真，也偶尔使用debussy查看波形，最近在别人的推荐下，我开始尝试使用vcs+verdi环境，&lt;br&gt;这篇文章用来记录自己苦逼的安装经历。之前自己下载了vcs verdi</summary>
        
      
    
    
    
    <category term="实用技巧" scheme="http://yjgcszhr.github.io/categories/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    
    
    <category term="vcs" scheme="http://yjgcszhr.github.io/tags/vcs/"/>
    
    <category term="verdi" scheme="http://yjgcszhr.github.io/tags/verdi/"/>
    
  </entry>
  
  <entry>
    <title>随笔</title>
    <link href="http://yjgcszhr.github.io/posts/a9a8.html"/>
    <id>http://yjgcszhr.github.io/posts/a9a8.html</id>
    <published>2021-03-14T15:20:06.000Z</published>
    <updated>2021-03-14T08:57:23.097Z</updated>
    
    
    <summary type="html">个人每周随笔，不定期更新</summary>
    
    
    
    
    <category term="水笔" scheme="http://yjgcszhr.github.io/tags/%E6%B0%B4%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>跨时钟域问题解决</title>
    <link href="http://yjgcszhr.github.io/posts/1635.html"/>
    <id>http://yjgcszhr.github.io/posts/1635.html</id>
    <published>2021-03-13T15:20:06.000Z</published>
    <updated>2021-03-15T15:31:00.172Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;当信号产生于一个时钟域，并穿过该时钟域边界，作用于另一时钟域时，称该信号为跨时钟信号，由&lt;br&gt;此引发的一系列问题称之为 CDC(clock domain crossing, 简称 CDC)问题。&lt;/p&gt;
&lt;h2 id=&quot;跨时钟域风险&quot;&gt;&lt;a href=&quot;#跨时钟域风险&quot;</summary>
        
      
    
    
    
    <category term="实用技巧" scheme="http://yjgcszhr.github.io/categories/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    
    
    <category term="CDC" scheme="http://yjgcszhr.github.io/tags/CDC/"/>
    
    <category term="verilog" scheme="http://yjgcszhr.github.io/tags/verilog/"/>
    
    <category term="IC设计" scheme="http://yjgcszhr.github.io/tags/IC%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>modelsim使用到的一些tcl脚本</title>
    <link href="http://yjgcszhr.github.io/posts/5e6f.html"/>
    <id>http://yjgcszhr.github.io/posts/5e6f.html</id>
    <published>2021-03-11T12:11:51.000Z</published>
    <updated>2021-03-24T03:17:37.215Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;日常modelsim仿真，每次都需要建立工程，添加波形，很是麻烦，于是我就上网搜了一下，总结写了一点脚本来自动编译仿真代码文件。菜鸟学习中，写得不当，还请指正。&lt;/p&gt;
&lt;h2 id=&quot;常用指令简介&quot;&gt;&lt;a href=&quot;#常用指令简介&quot;</summary>
        
      
    
    
    
    <category term="实用技巧" scheme="http://yjgcszhr.github.io/categories/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    
    
    <category term="modelsim" scheme="http://yjgcszhr.github.io/tags/modelsim/"/>
    
    <category term="tcl" scheme="http://yjgcszhr.github.io/tags/tcl/"/>
    
  </entry>
  
  <entry>
    <title>tcl快速入门</title>
    <link href="http://yjgcszhr.github.io/posts/cb9b.html"/>
    <id>http://yjgcszhr.github.io/posts/cb9b.html</id>
    <published>2021-03-08T12:11:51.000Z</published>
    <updated>2021-03-14T07:08:25.886Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;TCL是一种很通用的脚本语言，功能强大。最早称为“工具命令语言””Tool Command Language”，但是目前已经不是这个含义，不过我们仍然称呼它TCL，发音为”tickle”。TCL经常被用于快速原型开发，脚本编程，GUI和测试等方面。&lt;/p&gt;
&lt;h2</summary>
        
      
    
    
    
    <category term="编程语言" scheme="http://yjgcszhr.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
    <category term="tcl" scheme="http://yjgcszhr.github.io/tags/tcl/"/>
    
  </entry>
  
  <entry>
    <title>markdown语法</title>
    <link href="http://yjgcszhr.github.io/posts/b859.html"/>
    <id>http://yjgcszhr.github.io/posts/b859.html</id>
    <published>2021-03-06T13:27:04.000Z</published>
    <updated>2021-03-15T15:13:50.349Z</updated>
    
    
    <summary type="html">&lt;p&gt;Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。当前许多网站都广泛使用 Markdown 来撰写帮助文档或是用于论坛上发表消息。笔者写这篇文章主要是写给自己看，熟能生巧，也顺便推广一波markdown。&lt;/p&gt;</summary>
    
    
    
    <category term="编程语言" scheme="http://yjgcszhr.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
    <category term="markdown" scheme="http://yjgcszhr.github.io/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yjgcszhr.github.io/posts/3eeb.html"/>
    <id>http://yjgcszhr.github.io/posts/3eeb.html</id>
    <published>2021-03-05T15:20:06.000Z</published>
    <updated>2021-03-14T08:37:27.118Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt;</summary>
        
      
    
    
    
    <category term="实用技巧" scheme="http://yjgcszhr.github.io/categories/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    
    
    <category term="hexo" scheme="http://yjgcszhr.github.io/tags/hexo/"/>
    
  </entry>
  
</feed>
